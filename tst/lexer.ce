{ typedef char Tk_s[256] }

--data Tk ({int},{Tk_s}):     -- TODO: inheritance
--    Tk_ERR ()               -- TODO: optional ()
--                            -- TODO: |

data Tk:
    Tk_ERR ({int},{Tk_s})

mut inp :: {char*}

val t_lexer :: () -> () = func :: () -> ():
    :
        set inp = {stropen ("r", 0, "-- foobar")}
        let tk :: Tk = lexer():             -- TODO: optional [tk :: Tk =] (assume it)
            call assert (ok) where:
                val ok :: {int} = case tk:
                    Tk_COMMENT (_) -> {1}
                    else           -> {0}

call t_lexer ()
